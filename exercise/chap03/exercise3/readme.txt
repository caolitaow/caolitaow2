d1,题目：有1、2、3、4个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？
程序分析：可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去
　　　　　　掉不满足条件的排列。
Digit.java

2,判断101-200之间有多少个素数，并输出所有素数。
只能被1和它本身整除的自然数为素数(质数)		
102 2 51 103
Prime.java 

3,打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位
数字立方和等于该数本身。例如：153是一个“水仙花数”，因为
153=1的三次方＋5的三次方＋3的三次方。
Flower.java
Math.pow(a,3);
a*a*a

4,将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。
2=2*1

对n进行分解质因数，应先找到一个最小的质数k，然后按下述步骤完成：
	a)如果这个质数恰等于n，则说明分解质因数的过程已经结束，
	打印出即可。质数<=n
	b) 如果n不等于i，i能被n整除，则应打印出i的值，
	并用n除以i的商,作为新的正整数n,重复执行第一步。

	提示：如果一个自然数能写成两个自然数的乘积，那么这两个自然数就叫作原来那个数的因数。


Divide.java

5,求任意两个正整数的最大公约数和(GCD)和最小公倍数(LCM)
除号前的是被除数,除号后的是除数 被除数÷除数=商
辗转相除法的算法为：首先将 m除以 n（m>n）得余数r，再用余数r去除原来的除数（即n/r），得新的余数，重复此过程直到余数为 0时停止，此时的除数就是m 和 n的最大公约数。 
 求 m和 n的最小公倍数: m和 n的积除以(m和 n 的最大公约数)。
GcdLcm.java

6,求1000以内的完全数
若一个自然数，恰好与除去它本身以外的一切因数(假如a*b=c（a、b、c都是整数)，那么我们称a和b就是c的因数)的和相等，这种数叫做完全数。
例如，6=1+2＋3
28=1+＋14
496=1+2+4+8＋16+31+62＋124+248
先计算所选取的整数a(a的取值1~1000)的因数，将各因数累加于m，若m等于a，则可确认a为完全数

Perfect.java

[0.0,1.0)

辗转相除法



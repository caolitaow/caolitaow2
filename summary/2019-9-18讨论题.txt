	*什么情况下会发生栈内存溢出
		java中的栈是存放局部变量，变量的引用，基本数据类型
		而堆是用来存放对象
		
		栈里的东西用完就会弹出，释放内存，所以要存放在栈里的各种变量所需的空间大于整个栈
		的空间，此时就会溢出，而函数的递归调用容易产生栈溢出，因为方法的生命周期被加长了
		在递归的过程中产生了很多的局部变量，局部变量所占的栈空间要想被释放，就要等该方法执行
		完，但该方法又递归进了下一个方法，这样栈空间被不断消耗，最终导致溢出
		
	
	*简单说说你了解的类加载器，可以打破双亲委派么，怎么打破
		向上委托
	
		双亲委派”机制只是Java推荐的机制，并不是强制的机制。
		我们可以继承java.lang.ClassLoader类，实现自己的类加载器。如果想保持双亲委派模型，
		就应该重写findClass(name)方法；如果想破坏双亲委派模型，可以重写loadClass(name)方法。
	
	*数据库自增主键可能的问题有哪些
	
	
		*可能会溢出主键的取值范围
		*删除的主键没法再利用了【除非手动添加】
		*主键只能是整型，其他类型不支持自增，不能让各种字符混合形成的文本成为主键
		
	
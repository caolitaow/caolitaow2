2019,8.14:
	StringBuffer---线程安全的 
	StringBuilder---线程不安全的（会产生线程安全问题）但效率比上者要高

死锁和线程优先级
	1.生产者消费者有可能死锁；
	2.嵌套锁，就会死锁：同步代码块里包含同步代码块，且锁对象不一致就有可能造成死锁
	3.没事别写死锁
	4.Java中的线程可以设置优先级，但是在没有调用wait(),notify(),notifyAll()的代码中设置的优先级
	的作用很小，在线程的等待唤醒机制中设置了优先级，有一点作用
	
***注意：
notify()不释放锁对象，wait()才释放锁对象，同步代码块执行完会释放锁，执行时遇到异常也会释放锁等	

*IO流和文件系统：
	1.java对操作系统中的文件系统的描述【File类】
		IO:Input,Output
		流：字节数据在内存和其他硬件设备之间进行传输的现象的形象描述；
		
		IO流：相对于内存和应用程序而言
			输入流：
			输出流
		标准的IO设备：
			标准的输入设备：键盘；其他输入设备还有鼠标，手柄等
			标准的输出设备：显示器；其他输出设备还有打印机，投影仪等
			
	2.java语言对文件系统的描述：
		文件系统：提供了对文件或者目录的创建，读取，修改，和删除等操作；在文件系统中的每个
		文件都有一个唯一能够确定该文件位置的路径
		
		路径：绝对路径：带有根目录或者盘符的路径
			  相对路径：不带有根目录或者盘符的路径就是相对路径		
		
		文件系统中的某个文件可以有多个路径与之对应，但是一个路径只能确定一个文件
		
		本地文件协议：http://  ftp://  jdbc:mysql:// 所谓协议：数据传输时遵循的规则
					  
					  file://,此协议表示本地文件协议，通常在定义一个本地文件路径时都会省略
					  本地文件协议
			Windows中： [file:///]C:\a.txt?
			Linux中：   [file://]/home/clt
		
       *File类:java语言中对文件这类事物的抽象描述，既能表示常规文件，也能表示目录[目录也是一种文件]
			   
			   该类的对象只能表示与之对应的相关属性，不能表示文件中的内容
			
			   不同的OS中，目录分隔符也不一样，windows:"\",如果在Java代码中表示路径"\\"
											   Linux/Unix中："/"java可以通过File类的相关静态属性
											   获取分隔符
		
				此类表示的文件系统中的文件可存在也可不存在
	2.Java中的IO流体系：
		File类中的方法：createNewFile();createTempFile("文件名前缀名","文件后缀名",dir)
		
						delete(); getFreeSpace();getName();//获取文件名称不包含路径
						getParent();//获取父级路径
						boolean isDirectory();	isFile();
						lastModified();返回时间戳
						length();返回文件的长度
						list();列出文件的字符串形式（显示一下有哪些文件）
						listFiles(FilenameFilter filter);过滤出自己想要的文件名 
														 FileFilter类形参，过滤出自己想要的文件（例如隐藏文件）
						mkdir();创建单级目录 mkdirs();创建多级目录当然也能创建单级	
						
						renameTo(File dest);重命名成新File对象所对应的文件名	
						练习：定义功能，传递一个目录，使用递归遍历此目录下的所有子目录和子文件，如果是目录，则先列出
						所有子文件将该目录传递给该功能继续遍历，如果是文件则打印出来	

小结：通过同步代码块将多线程分解成单线程，一个同步代码块里只有一个线程
double精度丢失问题：要将double类型的基本数据转化成BigDecimal 例如： BigDecimal bx = new BigDecimal(Double.toString(1.00));
					用BigDecimal类里的有关运算的方法对数据进行操作，例如：bx=ax.add(bx);ax也是BigDecimal类型

	
	
	
	
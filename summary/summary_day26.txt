2019,8.21:
	*一对一的TCP聊天用不到线程同步和通信，其中用到的输入流【BufferedInputStream/BufferedReader】
	的read()，readLine()方法是阻塞式方法，你不写数据，它就一直等着，这已经实现了同步
	
	*不需要通信，想用也用不了，因为不同线程组里的线程之间不能相互通信【例如不同的main线程组中】
	虽然用的是同一个锁对象【钥匙】但wait()丢钥匙的时候，另一个线程组里的线程压根抢不到，也不能被
	唤醒
	
	*BadLocationException：非受检异常  Invalid location
	*java.net.BindException: Address already in use: JVM_Bind
	
Java8中的新特性：
	1.接口中的默认和静态方法：
		*在Java8+（以上）版本中，接口【以前只能有抽象方法】中可以有普通方法，但是该普通方法
		只能由default【实例方法】或者static【类方法】修饰：
		
		二义性：要是java允许多继承，就不知道调用哪个父类里的同名方法了
		
		*如果一个类所实现的多个接口中有相同的方法【default实例方法】，要有在该实现类中必须重写接口中的方法
		
		**在java8+以上版本中的接口中的静态方法只能由该接口直接调用，不能由该接口的实现类的类名调用
		
	
	
	2.Lambda表达式
		1.函数式接口：
			*是一个接口
			*该接口上有@FunctionalInterface注解，该注解的作用就是强制该接口只能有一个抽象方法
			若没有该注解，但接口只有一个抽象方法，则该接口可用作函数式接口
			*该接口只能有一个抽象方法
			*在函数式接口中可以有多个默认方法或者静态方法；
			::也是关键字  只能引用方法，不能引用变量
				*引用构造器 
				*引用成员方法[非静态]
					list.forEach(System.out::println);
				*引用类方法
		
	
	
	3.函数式编程【链式调用】
	
	4.java8中已经提供的函数式接口
		Predicate接口
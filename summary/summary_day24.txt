2019,8.19:
	网络编程：
		*IP地址：IP是Internet Protocol【网络协议】的缩写，IP地址指的是在一个网络中用于确定某个
				计算机主机的标识；该标识由四个字节组成，如：127.0.0.1
				一个计算机可以对应多个IP地址，但一个IP地址只能对应一台主机
		
		*端口：为计算机中运行的网络应用程序分配的应用程序标识；取值范围：0~65535，但是0到1023
		由操作系统软件保留；
		
		*URL：统一资源定位符
			www.baidu.com----主机名【域名】
			DNS：Domain Name System----域名系统，域名解析服务器
		
		*URI：统一资源标识符
		
		*在Java中使用InetAddress类
			Inet4Address IPv4
			Inet6Address IPv6
			
			hosts文件中可以配置主机名到IP地址的映射关系；
				Windows:C:\Windows\System32\drivers\etc\hosts
				Linux:/etc/hosts
		
		TCP编程：
			Socket:主要用于TCP通信的客户端；
				Socket(String host, int port); 创建Socket对象，客户端的Socket对象就会根据
				所传的IP地址【host】和端口连接服务端的ServerSocket
				
				包装该输出流：如果发送的是字符串建议用PrintWriter pw = new PrintWriter(os, true)
													  当传入true时自动刷新流
				              其它需用字节流
				pw.println("请求");
				
			ServerSocket:主要用于TCP通信的服务端；
				ServerSocket(int port);创建时需要监听一个端口，当客户端的Socket对象连接此端口时
				就能被该ServerSocket对象识别并且接受；
				
				Socket accept();//在服务器端的ServerScoket获取客户端的Socket对象
				cs.getInputStream();
				BufferedReader 包装输入流 readLine();读取请求
				ss.getInetAddress().getHostAddress();
				
			关闭资源：
				先关闭流，再关闭Socket
			
			练习：
				1.客户端循环发，服务端一直接受
				2.TCP的聊天系统
				3.多线程聊天
			
			*TCP协议的特点：
				1.可靠的网络协议，安全，数据传输之前用"三次握手"
				2.效率低，但是安全；
				3.在传输数据时，客户端和服务端都必须同时在线
				
		UDP编程：
				